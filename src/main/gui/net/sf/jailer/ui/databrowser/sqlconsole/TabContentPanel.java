/*
 * Copyright 2007 - 2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.sf.jailer.ui.databrowser.sqlconsole;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Insets;

import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

import net.sf.jailer.ui.databrowser.BrowserContentPane;
import net.sf.jailer.ui.databrowser.BrowserContentPane.TableModelItem;

public class TabContentPanel extends javax.swing.JPanel {

    /**
     * Creates new form TabContentPanel
     */
    public TabContentPanel(JLabel rowsCount) {
        initComponents();
        statementLabel = new JLabel() {
        	@Override
        	public Dimension getMinimumSize() {
				return new Dimension(8, super.getMinimumSize().height);
        	}
        };
        statementLabel.setForeground(new Color(0, 0, 180));
        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(0, 0, 0, 10);
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel.add(rowsCount, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel.add(statementLabel, gridBagConstraints);
    }

    public void updateTextView(JTable rowsTable) {
    	TableColumnModel cm = rowsTable.getColumnModel();
    	TableModel rDm = rowsTable.getModel();
    	RowSorter<? extends TableModel> sorter = rowsTable.getRowSorter();
    	String[][] cell = new String[rDm.getRowCount() + 1][];
    	int[] maxLength = new int[rDm.getColumnCount()];
		for (int y = -1; y < rDm.getRowCount(); ++y) {
			cell[y + 1] = new String[rDm.getColumnCount()];
			for (int x = 0; x < rDm.getColumnCount(); ++x) {
				int mx = cm.getColumn(x).getModelIndex();
				Object value;
				if (y < 0) {
					value = rDm.getColumnName(mx);
				} else {
					value = rDm.getValueAt(sorter.convertRowIndexToModel(y), mx);
				}
				if (value instanceof TableModelItem) {
					value = ((TableModelItem) value).value;
				}
				String cellContent = value == BrowserContentPane.NULL || value == null? "" : value.toString();
				cell[y + 1][x] = cellContent;
				maxLength[x] = Math.max(cellContent.length(), maxLength[x]);
			}
		}
		String nl = System.getProperty("line.separator", "\n");
		StringBuilder sb = new StringBuilder();
		for (int y = 0; y < cell.length; ++y) {
			if (y == 1) {
				for (int x = 0; x < cell[y].length; ++x) {
					for (int i = 3 + maxLength[x]; i > 0; --i) {
						sb.append("-");
					}
				}
				sb.append(nl);
			}
			for (int x = 0; x < cell[y].length; ++x) {
				sb.append(cell[y][x]);
				for (int i = 3 + maxLength[x] - cell[y][x].length(); i > 0; --i) {
					sb.append(" ");
				}
			}
			sb.append(nl);
		}

		jTextArea.setText(sb.toString());
		jTextArea.setCaretPosition(0);
		jTextArea.setEditable(false);
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel = new javax.swing.JPanel();
        controlsPanel1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        contentPanel = new javax.swing.JPanel();
        columnsPanel = new javax.swing.JPanel();
        columnsScrollPane = new javax.swing.JScrollPane();
        textTabPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        panel.setLayout(new java.awt.GridBagLayout());

        controlsPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        panel.add(controlsPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(panel, gridBagConstraints);

        jPanel1.setLayout(new java.awt.BorderLayout());

        tabbedPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        contentPanel.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        contentPanel.setLayout(new java.awt.BorderLayout());
        tabbedPane.addTab("Rows", contentPanel);

        columnsPanel.setLayout(new java.awt.BorderLayout());
        columnsPanel.add(columnsScrollPane, java.awt.BorderLayout.CENTER);

        tabbedPane.addTab("Columns", columnsPanel);

        textTabPanel.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setEnabled(false);
        jScrollPane2.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N

        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        textTabPanel.add(jScrollPane2, gridBagConstraints);

        tabbedPane.addTab("Text", textTabPanel);

        jPanel1.add(tabbedPane, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel columnsPanel;
    public javax.swing.JScrollPane columnsScrollPane;
    public javax.swing.JPanel contentPanel;
    public javax.swing.JPanel controlsPanel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    public javax.swing.JPanel panel;
    public javax.swing.JTabbedPane tabbedPane;
    public javax.swing.JPanel textTabPanel;
    // End of variables declaration//GEN-END:variables
    public javax.swing.JLabel statementLabel;
}
